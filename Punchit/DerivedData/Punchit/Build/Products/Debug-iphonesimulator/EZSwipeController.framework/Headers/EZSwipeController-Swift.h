// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UINavigationBar;
@class UIPageViewController;
@class UIButton;
@protocol EZSwipeControllerDataSource;
@class NSCoder;

SWIFT_CLASS("_TtC17EZSwipeController17EZSwipeController")
@interface EZSwipeController : UIViewController
@property (nonatomic, copy) NSArray<UINavigationBar *> * __nonnull stackNavBars;
@property (nonatomic, copy) NSArray<UIViewController *> * __null_unspecified stackVC;
@property (nonatomic, copy) NSArray<UIViewController *> * __null_unspecified stackPageVC;
@property (nonatomic) CGFloat bottomNavigationHeight;
@property (nonatomic, strong) UIPageViewController * __null_unspecified pageViewController;
@property (nonatomic, strong) UIButton * __nullable titleButton;
@property (nonatomic, strong) UIViewController * __null_unspecified currentStackVC;
@property (nonatomic, readonly) NSInteger currentVCIndex;
@property (nonatomic, strong) id <EZSwipeControllerDataSource> __nullable datasource;
@property (nonatomic) BOOL navigationBarShouldBeOnBottom;
@property (nonatomic) BOOL navigationBarShouldNotExist;
@property (nonatomic) BOOL cancelStandardButtonEvents;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupView;
- (void)loadView;
- (void)viewDidLoad;
@end


@interface EZSwipeController (SWIFT_EXTENSION(EZSwipeController)) <UIPageViewControllerDelegate>
- (void)pageViewController:(UIPageViewController * __nonnull)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> * __nonnull)previousViewControllers transitionCompleted:(BOOL)completed;
@end


@interface EZSwipeController (SWIFT_EXTENSION(EZSwipeController)) <UIPageViewControllerDataSource>
- (UIViewController * __nullable)pageViewController:(UIPageViewController * __nonnull)pageViewController viewControllerBeforeViewController:(UIViewController * __nonnull)viewController;
- (UIViewController * __nullable)pageViewController:(UIPageViewController * __nonnull)pageViewController viewControllerAfterViewController:(UIViewController * __nonnull)viewController;
@end


SWIFT_PROTOCOL("_TtP17EZSwipeController27EZSwipeControllerDataSource_")
@protocol EZSwipeControllerDataSource
- (NSArray<UIViewController *> * __nonnull)viewControllerData;
@optional
- (NSInteger)indexOfStartingPage;
- (NSArray<NSString *> * __nonnull)titlesForPages;
- (UINavigationBar * __nonnull)navigationBarDataForPageIndex:(NSInteger)index;
- (BOOL)disableSwipingForLeftButtonAtPageIndex:(NSInteger)index;
- (BOOL)disableSwipingForRightButtonAtPageIndex:(NSInteger)index;
- (void)clickedLeftButtonFromPageIndex:(NSInteger)index;
- (void)clickedRightButtonFromPageIndex:(NSInteger)index;
@end

#pragma clang diagnostic pop
